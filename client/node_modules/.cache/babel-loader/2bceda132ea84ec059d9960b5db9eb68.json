{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\"; // Import Action creator and dispatch\n\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: 'hello',\n      expiryData: [...currentData],\n      pricesData: '',\n      chartOptions: {\n        series: [{\n          name: \"Now\",\n          data: []\n        }, {\n          name: \"Expiry\",\n          color: \"green\",\n          data: []\n        }],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n          categories: []\n        }\n      }\n    };\n\n    this.afterChartCreated = chart => {\n      this.internalChart = chart;\n      this.forceUpdate();\n    };\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow(); // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Prices Data Frame\n    // if (\n    //   typeof this.state.pricesData !== \"undefined\" &&\n    //   this.state.pricesData.length > 0\n    // ) {\n    //   this.state.pricesData.map(data => {\n    //     this.state.chartOptions.xAxis.categories.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n\n    console.log(this.state);\n  }\n\n  componentDidMount() {// this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart,\n          customLabels = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartOptions,\n      callback: this.afterChartCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), customLabels);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(mapStateToProps, {\n  getGraphData\n})(withRouter(RiskProfile));","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js"],"names":["React","render","HighchartsReact","Highcharts","getGraphData","connect","withRouter","RiskProfile","PureComponent","state","currentData","expiryData","pricesData","chartOptions","series","name","data","color","chart","backgroundColor","type","credits","enabled","title","text","align","fontFamily","x","style","yAxis","fontWeight","labels","xAxis","categories","afterChartCreated","internalChart","forceUpdate","componentDidUpdate","reflow","console","log","componentDidMount","customLabels","mapStateToProps","graphValues"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\";\n// Import Highcharts\nimport Highcharts from \"highcharts/highcharts.src.js\";\n// Import Action creator and dispatch\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n\n\n\n    state = {\n      currentData: 'hello',\n      expiryData: [...currentData],\n      pricesData: '',\n      chartOptions: {\n        series: [\n          {\n            name: \"Now\",\n            data: []\n          },\n          {\n            name: \"Expiry\",\n            color: \"green\",\n            data: []\n          }\n        ],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n\n          categories: []\n        }\n      }\n    };\n\n\n  afterChartCreated = chart => {\n    this.internalChart = chart;\n    this.forceUpdate();\n  };\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n    // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Prices Data Frame\n    // if (\n    //   typeof this.state.pricesData !== \"undefined\" &&\n    //   this.state.pricesData.length > 0\n    // ) {\n    //   this.state.pricesData.map(data => {\n    //     this.state.chartOptions.xAxis.categories.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    console.log(this.state);\n  }\n  componentDidMount() {\n    // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart,\n      customLabels = [];\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state.chartOptions}\n          callback={this.afterChartCreated}\n        />\n        {customLabels}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGraphData }\n)(withRouter(RiskProfile));\n"]},"metadata":{},"sourceType":"module"}