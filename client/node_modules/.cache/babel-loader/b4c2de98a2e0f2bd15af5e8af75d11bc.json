{"ast":null,"code":"import _defineProperty from \"/Users/neeraj/Desktop/standard_alpha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ERRORS, GET_GRAPH_DATA } from \"../actions/graphsAction\";\nconst initialState = {\n  graphValues: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_GRAPH_DATA:\n      return _objectSpread({}, state, {\n        graphValues: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/reducers/graphReducer.js"],"names":["GET_ERRORS","GET_GRAPH_DATA","initialState","graphValues","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,yBAA3C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,cAAL;AACE,+BACKG,KADL;AAEED,QAAAA,WAAW,EAAEE,MAAM,CAACE;AAFtB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import { GET_ERRORS, GET_GRAPH_DATA } from \"../actions/graphsAction\";\n\nconst initialState = {\n  graphValues: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_GRAPH_DATA:\n      return {\n        ...state,\n        graphValues: action.payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}