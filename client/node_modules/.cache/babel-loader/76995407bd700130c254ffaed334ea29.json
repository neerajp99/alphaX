{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\"; // Import Action creator and dispatch\n\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.afterChartCreated = chart => {\n      this.internalChart = chart;\n      this.forceUpdate();\n    };\n\n    this.state = {\n      currentData: [],\n      expiryData: [],\n      pricesData: [],\n      chartOptions: {\n        series: [{\n          name: \"Now\",\n          data: []\n        }, {\n          name: \"Expiry\",\n          color: \"green\",\n          data: []\n        }],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n          categories: []\n        }\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow(); // console.log(this.props.graphValues);\n\n    this.setState({\n      currentData: this.props.graphValues.graphValues.current_payoff,\n      expiryData: this.props.graphValues.graphValues.expiry_payoff,\n      pricesData: this.props.graphValues.graphValues.underlying_price\n    }); // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n\n    console.log(this.state.chartOptions.series[1].data);\n  }\n\n  render() {\n    const chart = this.internalChart,\n          customLabels = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartOptions,\n      callback: this.afterChartCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), customLabels);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(mapStateToProps, {\n  getGraphData\n})(withRouter(RiskProfile));","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js"],"names":["React","render","HighchartsReact","Highcharts","getGraphData","connect","withRouter","RiskProfile","PureComponent","constructor","props","afterChartCreated","chart","internalChart","forceUpdate","state","currentData","expiryData","pricesData","chartOptions","series","name","data","color","backgroundColor","type","credits","enabled","title","text","align","fontFamily","x","style","yAxis","fontWeight","labels","xAxis","categories","componentDidUpdate","reflow","setState","graphValues","current_payoff","expiry_payoff","underlying_price","console","log","customLabels","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\";\n// Import Highcharts\nimport Highcharts from \"highcharts/highcharts.src.js\";\n// Import Action creator and dispatch\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: [],\n      expiryData: [],\n      pricesData: [],\n      chartOptions: {\n        series: [\n          {\n            name: \"Now\",\n            data: []\n          },\n          {\n            name: \"Expiry\",\n            color: \"green\",\n            data: []\n          }\n        ],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n\n          categories: []\n        }\n      }\n    };\n  }\n\n  afterChartCreated = chart => {\n    this.internalChart = chart;\n    this.forceUpdate();\n  };\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n    // console.log(this.props.graphValues);\n    this.setState({\n      currentData: this.props.graphValues.graphValues.current_payoff,\n      expiryData: this.props.graphValues.graphValues.expiry_payoff,\n      pricesData: this.props.graphValues.graphValues.underlying_price,\n\n    });\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    console.log(this.state.chartOptions.series[1].data);\n  }\n\n  render() {\n    const chart = this.internalChart,\n      customLabels = [];\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state.chartOptions}\n          callback={this.afterChartCreated}\n        />\n        {customLabels}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGraphData }\n)(withRouter(RiskProfile));\n"]},"metadata":{},"sourceType":"module"}