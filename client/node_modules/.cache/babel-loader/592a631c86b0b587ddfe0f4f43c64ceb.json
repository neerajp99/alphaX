{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\"; // Import Action creator and dispatch\n\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: [],\n      expiryData: [],\n      pricesData: [],\n      chartOptions: {\n        series: [{\n          name: \"Now\",\n          data: [842.7379319, 842.7379319, 842.7379319, 842.7379318, 842.7379318, 842.7379317, 842.7379316, 842.7379311, 842.73793, 842.7379274, 842.7379215, 842.7379084, 842.7378797, 842.7378188, 842.7376923, 842.7374356, 842.7369266, 842.7359403, 842.7340715, 842.7306082, 842.7243293, 842.71319, 842.6938457, 842.6609538, 842.6061784, 842.5168135, 842.3739379, 842.1500221, 841.8059305, 841.2873043, 840.5203731, 839.4073294, 837.8214994, 835.6026558, 832.5529222, 828.4338037, 822.9649316, 815.8251064, 806.6561708, 795.0701383, 780.659853, 763.0132987, 741.7315209, 716.4500076, 686.8632828, 652.752386, 614.0147702, 570.6958774, 523.0211555, 471.4265315, 416.5843961, 359.4211558, 301.1216632, 243.1157124, 187.0426221, 134.6919337, 87.92132745, 48.55660432, 18.28228867, -1.465791849, -9.593462736, -5.415221455, 11.31302566, 40.39913949, 81.25610237, 132.9728782, 194.4045501, 264.2699163, 341.2452101, 424.0448081, 511.4830535, 602.5148638, 696.2559427, 791.9857155, 889.1373707, 987.2796873, 1086.09488, 1185.355803, 1284.904807, 1384.635542, 1484.478218, 1584.388246, 1684.337875, 1784.310261, 1884.295436, 1984.287641, 2084.283625, 2184.281599, 2284.280597, 2384.280112, 2484.279881, 2584.279774]\n        }, {\n          name: \"Expiry\",\n          color: \"green\",\n          data: [844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.35, 844.3463448, 744.35, 644.35, 544.35, 444.35, 344.35, 244.35, 144.35, 44.34999999, -55.65000001, -155.65, -255.65, -355.65, -455.6444619, -355.65, -255.65, -155.65, -55.64999999, 44.35000001, 144.35, 244.35, 344.35, 444.35, 544.35, 644.35, 744.35, 844.35, 944.35, 1044.35, 1144.35, 1244.35, 1344.35, 1444.35, 1544.35, 1644.35, 1744.35, 1844.35, 1944.35, 2044.35, 2144.35, 2244.35, 2344.35, 2444.35, 2544.35]\n        }],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n          categories: []\n        }\n      }\n    };\n\n    this.afterChartCreated = chart => {\n      this.internalChart = chart;\n      this.forceUpdate();\n    };\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow(); // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // Updating Prices Data Frame\n\n    if (typeof this.state.pricesData !== \"undefined\" && this.state.pricesData.length > 0) {\n      this.props.graphValues.graphValues.underlying_price.map(data => {\n        this.state.chartOptions.xAxis.categories.push(data);\n      }); // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n\n    console.log(this.state); // Updating specific state in an object\n  }\n\n  componentDidMount() {\n    // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    if (this.props) {\n      let nowCopy = JSON.parse(JSON.stringify(this.state.chartOptions));\n      nowCopy.xAxis.categories = this.props.graphValues.graphValues.current_payoff;\n      this.setState({\n        chartOptions: nowCopy // currentData: this.props.graphValues.graphValues.current_payoff,\n\n      });\n      console.log('NOW', nowCopy);\n    }\n  }\n\n  render() {\n    const chart = this.internalChart,\n          customLabels = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartOptions,\n      callback: this.afterChartCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), customLabels);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(mapStateToProps, {\n  getGraphData\n})(withRouter(RiskProfile));","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js"],"names":["React","render","HighchartsReact","Highcharts","getGraphData","connect","withRouter","RiskProfile","PureComponent","state","currentData","expiryData","pricesData","chartOptions","series","name","data","color","chart","backgroundColor","type","credits","enabled","title","text","align","fontFamily","x","style","yAxis","fontWeight","labels","xAxis","categories","afterChartCreated","internalChart","forceUpdate","componentDidUpdate","reflow","length","props","graphValues","underlying_price","map","push","console","log","componentDidMount","nowCopy","JSON","parse","stringify","current_payoff","setState","customLabels","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\";\n// Import Highcharts\nimport Highcharts from \"highcharts/highcharts.src.js\";\n// Import Action creator and dispatch\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n\n\n\n    state = {\n      currentData: [],\n      expiryData: [] ,\n      pricesData: [],\n      chartOptions: {\n        series: [\n          {\n            name: \"Now\",\n            data: [\n              842.7379319,\n             842.7379319,\n             842.7379319,\n             842.7379318,\n             842.7379318,\n             842.7379317,\n             842.7379316,\n             842.7379311,\n             842.73793,\n             842.7379274,\n             842.7379215,\n             842.7379084,\n             842.7378797,\n             842.7378188,\n             842.7376923,\n             842.7374356,\n             842.7369266,\n             842.7359403,\n             842.7340715,\n             842.7306082,\n             842.7243293,\n             842.71319,\n             842.6938457,\n             842.6609538,\n             842.6061784,\n             842.5168135,\n             842.3739379,\n             842.1500221,\n             841.8059305,\n             841.2873043,\n             840.5203731,\n             839.4073294,\n             837.8214994,\n             835.6026558,\n             832.5529222,\n             828.4338037,\n             822.9649316,\n             815.8251064,\n             806.6561708,\n             795.0701383,\n             780.659853,\n             763.0132987,\n             741.7315209,\n             716.4500076,\n             686.8632828,\n             652.752386,\n             614.0147702,\n             570.6958774,\n             523.0211555,\n             471.4265315,\n             416.5843961,\n             359.4211558,\n             301.1216632,\n             243.1157124,\n             187.0426221,\n             134.6919337,\n             87.92132745,\n             48.55660432,\n             18.28228867,\n             -1.465791849,\n             -9.593462736,\n             -5.415221455,\n             11.31302566,\n             40.39913949,\n             81.25610237,\n             132.9728782,\n             194.4045501,\n             264.2699163,\n             341.2452101,\n             424.0448081,\n             511.4830535,\n             602.5148638,\n             696.2559427,\n             791.9857155,\n             889.1373707,\n             987.2796873,\n             1086.09488,\n             1185.355803,\n             1284.904807,\n             1384.635542,\n             1484.478218,\n             1584.388246,\n             1684.337875,\n             1784.310261,\n             1884.295436,\n             1984.287641,\n             2084.283625,\n             2184.281599,\n             2284.280597,\n             2384.280112,\n             2484.279881,\n             2584.279774\n            ]\n          },\n          {\n            name: \"Expiry\",\n            color: \"green\",\n            data: [\n              844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.35,\n             844.3463448,\n             744.35,\n             644.35,\n             544.35,\n             444.35,\n             344.35,\n             244.35,\n             144.35,\n             44.34999999,\n             -55.65000001,\n             -155.65,\n             -255.65,\n             -355.65,\n             -455.6444619,\n             -355.65,\n             -255.65,\n             -155.65,\n             -55.64999999,\n             44.35000001,\n             144.35,\n             244.35,\n             344.35,\n             444.35,\n             544.35,\n             644.35,\n             744.35,\n             844.35,\n             944.35,\n             1044.35,\n             1144.35,\n             1244.35,\n             1344.35,\n             1444.35,\n             1544.35,\n             1644.35,\n             1744.35,\n             1844.35,\n             1944.35,\n             2044.35,\n             2144.35,\n             2244.35,\n             2344.35,\n             2444.35,\n             2544.35\n            ]\n          }\n        ],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n\n          categories: []\n        }\n      }\n    };\n\n\n  afterChartCreated = chart => {\n    this.internalChart = chart;\n    this.forceUpdate();\n  };\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n    // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n\n\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n\n\n    // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n\n\n    // Updating Prices Data Frame\n    if (\n      typeof this.state.pricesData !== \"undefined\" &&\n      this.state.pricesData.length > 0\n    ) {\n      this.props.graphValues.graphValues.underlying_price.map(data => {\n        this.state.chartOptions.xAxis.categories.push(data);\n      });\n\n\n      // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n\n\n\n\n\n    console.log(this.state);\n\n\n    // Updating specific state in an object\n\n\n  }\n  componentDidMount() {\n    // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n      if (this.props){\n        let nowCopy = JSON.parse(JSON.stringify(this.state.chartOptions))\n        nowCopy.xAxis.categories = this.props.graphValues.graphValues.current_payoff\n        this.setState({\n          chartOptions: nowCopy,\n          // currentData: this.props.graphValues.graphValues.current_payoff,\n        })\n        console.log('NOW', nowCopy)\n      }\n  }\n\n  render() {\n    const chart = this.internalChart,\n      customLabels = [];\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state.chartOptions}\n          callback={this.afterChartCreated}\n        />\n        {customLabels}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGraphData }\n)(withRouter(RiskProfile));\n"]},"metadata":{},"sourceType":"module"}