{"ast":null,"code":"import _slicedToArray from \"/Users/neeraj/Desktop/standard_alpha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Tables.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"call_bid\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_ask\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_volume\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_iv\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_delta\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_gamma\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_vega\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"call_theta\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"strike\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"expiry\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_bid\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_ask\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_volume\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_iv\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_delta\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_gamma\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_vega\",\n  label: \"Call Bid\",\n  minWidth: 80\n}, {\n  id: \"puts_theta\",\n  label: \"Call Bid\",\n  minWidth: 80\n}];\n\nfunction createData(call_bid, call_ask, call_volume, call_iv, call_delta, call_gamma, call_vega, call_theta, strike, expiry, puts_bid, puts_ask, puts_volume, puts_iv, puts_delta, puts_gamma, puts_vega, puts_theta) {\n  return {\n    call_bid,\n    call_ask,\n    call_volume,\n    call_iv,\n    call_delta,\n    call_gamma,\n    call_vega,\n    call_theta,\n    strike,\n    expiry,\n    puts_bid,\n    puts_ask,\n    puts_volume,\n    puts_iv,\n    puts_delta,\n    puts_gamma,\n    puts_vega,\n    puts_theta\n  };\n}\n\nconst rows = [createData(\"India\", \"IN\", 1324171354, 3287263), createData(\"China\", \"CN\", 1403500365, 9596961), createData(\"Italy\", \"IT\", 60483973, 301340), createData(\"United States\", \"US\", 327167434, 9833520), createData(\"Canada\", \"CA\", 37602103, 9984670), createData(\"Australia\", \"AU\", 25475400, 7692024), createData(\"Germany\", \"DE\", 83019200, 357578), createData(\"Ireland\", \"IE\", 4857000, 70273), createData(\"Mexico\", \"MX\", 126577691, 1972550), createData(\"Japan\", \"JP\", 126317000, 377973), createData(\"France\", \"FR\", 67022000, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 242495), createData(\"Russia\", \"RU\", 146793744, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 923768), createData(\"Brazil\", \"BR\", 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Tables.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","createData","call_bid","call_ask","call_volume","call_iv","call_delta","call_gamma","call_vega","call_theta","strike","expiry","puts_bid","puts_ask","puts_volume","puts_iv","puts_delta","puts_gamma","puts_vega","puts_theta","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","align","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  {\n    id: \"call_bid\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_ask\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_volume\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_iv\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_delta\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_gamma\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_vega\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"call_theta\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"strike\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n\n  {\n    id: \"expiry\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_bid\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_ask\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_volume\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_iv\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_delta\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_gamma\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_vega\",\n    label: \"Call Bid\",\n    minWidth: 80\n  },\n  {\n    id: \"puts_theta\",\n    label: \"Call Bid\",\n    minWidth: 80\n  }\n];\n\nfunction createData(\n  call_bid,\n  call_ask,\n  call_volume,\n  call_iv,\n  call_delta,\n  call_gamma,\n  call_vega,\n  call_theta,\n  strike,\n  expiry,\n  puts_bid,\n  puts_ask,\n  puts_volume,\n  puts_iv,\n  puts_delta,\n  puts_gamma,\n  puts_vega,\n  puts_theta\n) {\n  return {\n    call_bid,\n    call_ask,\n    call_volume,\n    call_iv,\n    call_delta,\n    call_gamma,\n    call_vega,\n    call_theta,\n    strike,\n    expiry,\n    puts_bid,\n    puts_ask,\n    puts_volume,\n    puts_iv,\n    puts_delta,\n    puts_gamma,\n    puts_vega,\n    puts_theta\n  };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767)\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}