{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\"; // Import Action creator and dispatch\n\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: \"hello\",\n      expiryData: this.currentData,\n      pricesData: \"\"\n    };\n\n    this.afterChartCreated = chart => {\n      this.internalChart = chart;\n      this.forceUpdate();\n    };\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow(); // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Prices Data Frame\n    // if (\n    //   typeof this.state.pricesData !== \"undefined\" &&\n    //   this.state.pricesData.length > 0\n    // ) {\n    //   this.state.pricesData.map(data => {\n    //     this.state.chartOptions.xAxis.categories.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n\n    console.log(this.state);\n  }\n\n  componentDidMount() {// this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart;\n    const customLabels = [];\n    const chartOptions = {\n      series: [{\n        name: \"Now\",\n        data: []\n      }, {\n        name: \"Expiry\",\n        color: \"green\",\n        data: []\n      }],\n      chart: {\n        backgroundColor: \"#1f2531\",\n        type: \"line\"\n      },\n      credits: {\n        enabled: false\n      },\n      title: {\n        text: \"Risk Profile Graph\",\n        align: \"center\",\n        fontFamily: \"Lucida Grande\",\n        x: 70,\n        style: {\n          color: \"#fff\"\n        }\n      },\n      yAxis: {\n        title: {\n          enabled: true,\n          text: \"Prices\",\n          style: {\n            fontWeight: \"normal\",\n            color: \"#fff\"\n          }\n        },\n        labels: {\n          style: {\n            color: \"#fff\"\n          }\n        }\n      },\n      xAxis: {\n        labels: {\n          style: {\n            color: \"#fff\"\n          }\n        },\n        categories: []\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartOptions,\n      callback: this.afterChartCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), customLabels);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(mapStateToProps, {\n  getGraphData\n})(withRouter(RiskProfile));","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js"],"names":["React","render","HighchartsReact","Highcharts","getGraphData","connect","withRouter","RiskProfile","PureComponent","state","currentData","expiryData","pricesData","afterChartCreated","chart","internalChart","forceUpdate","componentDidUpdate","reflow","console","log","componentDidMount","customLabels","chartOptions","series","name","data","color","backgroundColor","type","credits","enabled","title","text","align","fontFamily","x","style","yAxis","fontWeight","labels","xAxis","categories","mapStateToProps","graphValues"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\";\n// Import Highcharts\nimport Highcharts from \"highcharts/highcharts.src.js\";\n// Import Action creator and dispatch\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  state = {\n    currentData: \"hello\",\n    expiryData: this.currentData,\n    pricesData: \"\"\n  };\n\n  afterChartCreated = chart => {\n    this.internalChart = chart;\n    this.forceUpdate();\n  };\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n    // console.log(this.props.graphValues);\n    // this.setState({\n    //   currentData: this.props.graphValues.graphValues.current_payoff,\n    //   expiryData: this.props.graphValues.graphValues.expiry_payoff,\n    //   pricesData: this.props.graphValues.graphValues.underlying_price\n    //   // chartOptions.series[1].data:\n    // });\n\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    // if (\n    //   typeof this.state.currentData !== \"undefined\" &&\n    //   this.state.currentData.length > 0\n    // ) {\n    //   this.state.currentData.map(data => {\n    //     this.state.chartOptions.series[0].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Expiry Data Frame\n    // if (\n    //   typeof this.state.expiryData !== \"undefined\" &&\n    //   this.state.expiryData.length > 0\n    // ) {\n    //   this.state.expiryData.map(data => {\n    //     this.state.chartOptions.series[1].data.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    // // Updating Prices Data Frame\n    // if (\n    //   typeof this.state.pricesData !== \"undefined\" &&\n    //   this.state.pricesData.length > 0\n    // ) {\n    //   this.state.pricesData.map(data => {\n    //     this.state.chartOptions.xAxis.categories.push(data);\n    //   });\n    //   // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    // }\n    console.log(this.state);\n  }\n  componentDidMount() {\n    // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart;\n    const customLabels = [];\n\n    const chartOptions = {\n      series: [\n        {\n          name: \"Now\",\n          data: []\n        },\n        {\n          name: \"Expiry\",\n          color: \"green\",\n          data: []\n        }\n      ],\n      chart: {\n        backgroundColor: \"#1f2531\",\n        type: \"line\"\n      },\n      credits: {\n        enabled: false\n      },\n      title: {\n        text: \"Risk Profile Graph\",\n        align: \"center\",\n        fontFamily: \"Lucida Grande\",\n        x: 70,\n        style: {\n          color: \"#fff\"\n        }\n      },\n      yAxis: {\n        title: {\n          enabled: true,\n          text: \"Prices\",\n          style: {\n            fontWeight: \"normal\",\n            color: \"#fff\"\n          }\n        },\n        labels: {\n          style: {\n            color: \"#fff\"\n          }\n        }\n      },\n      xAxis: {\n        labels: {\n          style: {\n            color: \"#fff\"\n          }\n        },\n\n        categories: []\n      }\n    };\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state.chartOptions}\n          callback={this.afterChartCreated}\n        />\n        {customLabels}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGraphData }\n)(withRouter(RiskProfile));\n"]},"metadata":{},"sourceType":"module"}