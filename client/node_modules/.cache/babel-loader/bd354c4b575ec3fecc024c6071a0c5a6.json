{"ast":null,"code":"import _slicedToArray from \"/Users/neeraj/Desktop/standard_alpha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Table.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { getValues } from \"../../actions/valuesAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport moment from \"moment\";\nconst columns = [{\n  id: \"ticker\",\n  label: \"Ticker\",\n  minWidth: 170\n}, {\n  id: \"opt_type\",\n  label: \"Option Type\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"opt_side\",\n  label: \"Side\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"strike\",\n  label: \"Strike\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"expiry\",\n  label: \"Expiry\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"price\",\n  label: \"Price\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"qty\",\n  label: \"Quantity\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}\n/*{{\n  id: \"density\",\n  label: \"Density\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}}*/\n];\n\nfunction createData(ticker, opt_type, opt_side, strike, expiry, price, qty) {\n  return {\n    ticker,\n    opt_type,\n    strike,\n    opt_side,\n    expiry,\n    price,\n    qty\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }; // net debit/credit state\n\n\n  const netDebitCreditState = React.useState(0); // const options\n\n  const optionsState = React.useState([]); // Get state values\n\n  const values = useSelector(state => state.values);\n  const dispatch = useDispatch(); // Toggle css state\n\n  const _React$useState5 = React.useState(\"lmao3\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        toggleCSSState = _React$useState6[0],\n        setValue = _React$useState6[1]; // Graph Data\n\n\n  const graphValues = useSelector(state => state.graphValues);\n  React.useEffect(() => {\n    if (netDebitCreditState[0] > 0) {\n      setValue(\"lmao2\");\n    } else {\n      setValue(\"lmao3\");\n    }\n\n    console.log(rows);\n  });\n  const rows = [];\n  rows[0] = {\n    ticker: \"\",\n    opt_type: \"\",\n    opt_side: \"\",\n    strike: \"\",\n    expiry: \"\",\n    price: \"\",\n    qty: \"\"\n  };\n  let ctr = 0;\n  let net_debit_credit = 0;\n  let change_counter = 0;\n  let data_price;\n  let spliceCtr = 0;\n\n  if (values.values.length > 0) {\n    // console.log('ROWS', rows.length)\n    values.values[2].map(data => {\n      for (let i = 0; i < rows.length; i++) {\n        // console.log(\"DATA\", data);\n        // console.log(\"VALUE OF EYE\", i);\n        if (data[0].strike === rows[i].strike && data[3] === rows[i].opt_type) {\n          const prices = rows[i].price;\n\n          if (data[1] == \"call_ask\") {\n            rows[i].price -= data[0].call_ask;\n            rows[i].qty += 1;\n            netDebitCreditState[0] -= data[0].call_ask * -1; // i = undefined;\n\n            data_price = undefined;\n            change_counter = 1;\n\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n\n          if (data[1] == \"call_bid\") {\n            rows[i].price += data[0].call_bid;\n            rows[i].qty -= 1;\n            netDebitCreditState[0] += data[0].call_bid * -1; // i = undefined;\n\n            data_price = undefined;\n            change_counter = 1;\n\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n        }\n\n        if (data[0].strike === rows[i].strike && data[3] === rows[i].opt_type) {\n          const prices = rows[i].price;\n\n          if (data[1] == \"puts_ask\") {\n            rows[i].price -= data[0].puts_ask;\n            rows[i].qty += 1;\n            netDebitCreditState[0] -= data[0].puts_ask * -1; // i = undefined;\n\n            data_price = undefined;\n            change_counter = 1;\n\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n\n          if (data[1] == \"puts_bid\") {\n            rows[i].price += data[0].puts_bid;\n            rows[i].qty -= 1;\n            netDebitCreditState[0] += data[0].puts_bid * -1; // i = undefined;\n\n            data_price = undefined;\n            change_counter = 1;\n\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n        }\n\n        if (rows[i].qty === 0) {\n          rows.splice(i, 1);\n        } // if (spliceCtr !== 0) {\n        //   rows.splice(i, 1);\n        //   spliceCtr = 0;\n        // }\n\n      }\n\n      if (change_counter === 0) {\n        const ticker = \"BANKNIFTY\";\n        let opt_type = \"\";\n        let opt_side = \"\";\n        const strike = data[0].strike;\n        const expiry = data[0].expiry;\n        let price = 0;\n        let qty = 0;\n\n        if (data[1] === \"call_ask\") {\n          opt_type = \"CE\";\n          opt_side = \"BUY\";\n          price -= data[0].call_ask;\n          qty += 1;\n        }\n\n        if (data[1] === \"call_bid\") {\n          opt_type = \"CE\";\n          opt_side = \"SELL\";\n          price += data[0].call_bid;\n          qty -= 1;\n        }\n\n        if (data[1] === \"puts_ask\") {\n          opt_type = \"PE\";\n          opt_side = \"BUY\";\n          price -= data[0].puts_ask;\n          qty += 1;\n        }\n\n        if (data[1] === \"puts_bid\") {\n          opt_type = \"PE\";\n          opt_side = \"SELL\";\n          price += data[0].puts_bid;\n          qty -= 1;\n        }\n\n        rows.push({\n          ticker,\n          opt_type,\n          opt_side,\n          strike,\n          expiry,\n          price,\n          qty\n        });\n        netDebitCreditState[0] += price * -1;\n        change_counter = 1;\n      }\n\n      ctr++;\n    });\n\n    if (netDebitCreditState >= 0) {\n      toggleCSSState = \"lmao2\";\n    }\n  } // Send Request to the python server for risk profile values\n\n\n  const sendRiskProfileValues = () => {\n    const socket = new WebSocket(\"ws://34.67.192.105:9090\");\n    let graphData;\n    socket.addEventListener(\"open\", event => {\n      const final_graph_data_array = [];\n\n      for (let i = 1; i < rows.length; i++) {\n        const underlying = rows[i].ticker.toLowerCase();\n        const quantity = rows[i].qty;\n        const opt_type = rows[i].opt_type.slice(0, 1);\n        const strike = rows[i].strike;\n        const price = rows[i].price;\n        let expiry1 = moment(rows[i].expiry, \"DD/MM/YYYY\").format(\"D MMMM Y\");\n        expiry1 = expiry1.toLowerCase();\n        const expiry = expiry1.slice(0, 2) + expiry1.slice(3, 6) + expiry1.slice(12, 16);\n        final_graph_data_array.push({\n          underlying: underlying,\n          expiry: expiry,\n          quantity: quantity,\n          opt_type: opt_type,\n          strike: strike,\n          price: price\n        });\n      }\n\n      const toSend = {\n        no_legs: rows.length - 1,\n        Legs: JSON.parse(JSON.stringify(final_graph_data_array)),\n        net_credit_debit: netDebitCreditState[0]\n      };\n      console.log(\"TOOOO SEND\", toSend); // const check = JSON.stringify(final_graph_data_array)\n      // const finalCheck = check.slice(1, check.length - 1)\n      // console.log(JSON.parse(check))\n\n      socket.send(JSON.stringify(toSend));\n    }); // Listen for messages\n\n    socket.addEventListener(\"message\", event => {\n      // console.log(\"Message from server \", event.data);\n      graphData = JSON.parse(event.data); // console.log(graphData)\n      // Dispatch action with grah data\n\n      dispatch(getGraphData(graphData));\n    });\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    id: \"positions_tasks_tables\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    className: \"positions_tasks_table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      className: \"lmao\",\n      id: toggleCSSState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"net_Debit_credit_heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Net Debit/Credit: \", netDebitCreditState[0])), React.createElement(\"button\", {\n    className: \"get_graph_button\",\n    onClick: sendRiskProfileValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"Risk Profile Graph\"));\n}","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Table.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","getValues","useDispatch","useSelector","getGraphData","moment","columns","id","label","minWidth","align","format","value","toLocaleString","createData","ticker","opt_type","opt_side","strike","expiry","price","qty","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","netDebitCreditState","optionsState","values","state","dispatch","toggleCSSState","setValue","graphValues","useEffect","console","log","rows","ctr","net_debit_credit","change_counter","data_price","spliceCtr","length","map","data","i","prices","call_ask","undefined","call_bid","puts_ask","puts_bid","splice","push","sendRiskProfileValues","socket","WebSocket","graphData","addEventListener","final_graph_data_array","underlying","toLowerCase","quantity","slice","expiry1","toSend","no_legs","Legs","JSON","parse","stringify","net_credit_debit","send","column","row","code"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { getValues } from \"../../actions/valuesAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport moment from \"moment\";\n\nconst columns = [\n  {\n    id: \"ticker\",\n    label: \"Ticker\",\n    minWidth: 170\n  },\n  {\n    id: \"opt_type\",\n    label: \"Option Type\",\n    minWidth: 100,\n    align: \"center\"\n  },\n  {\n    id: \"opt_side\",\n    label: \"Side\",\n    minWidth: 100,\n    align: \"center\"\n  },\n  {\n    id: \"strike\",\n    label: \"Strike\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"expiry\",\n    label: \"Expiry\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"price\",\n    label: \"Price\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"qty\",\n    label: \"Quantity\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  }\n  /*{{\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }}*/\n];\n\nfunction createData(ticker, opt_type, opt_side, strike, expiry, price, qty) {\n  return { ticker, opt_type, strike, opt_side, expiry, price, qty };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // net debit/credit state\n  const netDebitCreditState = React.useState(0);\n\n  // const options\n  const optionsState = React.useState([]);\n\n  // Get state values\n  const values = useSelector(state => state.values);\n  const dispatch = useDispatch();\n  // Toggle css state\n  const [toggleCSSState, setValue] = React.useState(\"lmao3\");\n\n  // Graph Data\n  const graphValues = useSelector(state => state.graphValues);\n\n  React.useEffect(() => {\n    if (netDebitCreditState[0] > 0) {\n      setValue(\"lmao2\");\n    } else {\n      setValue(\"lmao3\");\n    }\n    console.log(rows);\n  });\n\n  const rows = [];\n  rows[0] = {\n    ticker: \"\",\n    opt_type: \"\",\n    opt_side: \"\",\n    strike: \"\",\n    expiry: \"\",\n    price: \"\",\n    qty: \"\"\n  };\n  let ctr = 0;\n  let net_debit_credit = 0;\n  let change_counter = 0;\n  let data_price;\n  let spliceCtr = 0;\n  if (values.values.length > 0) {\n    // console.log('ROWS', rows.length)\n    values.values[2].map(data => {\n      for (let i = 0; i < rows.length; i++) {\n        // console.log(\"DATA\", data);\n        // console.log(\"VALUE OF EYE\", i);\n\n        if (data[0].strike === rows[i].strike && data[3] === rows[i].opt_type) {\n          const prices = rows[i].price;\n          if (data[1] == \"call_ask\") {\n            rows[i].price -= data[0].call_ask;\n            rows[i].qty += 1;\n            netDebitCreditState[0] -= data[0].call_ask * -1;\n            // i = undefined;\n            data_price = undefined;\n            change_counter = 1;\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n          if (data[1] == \"call_bid\") {\n            rows[i].price += data[0].call_bid;\n            rows[i].qty -= 1;\n            netDebitCreditState[0] += data[0].call_bid * -1;\n            // i = undefined;\n            data_price = undefined;\n            change_counter = 1;\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n        }\n\n        if (data[0].strike === rows[i].strike && data[3] === rows[i].opt_type) {\n          const prices = rows[i].price;\n          if (data[1] == \"puts_ask\") {\n            rows[i].price -= data[0].puts_ask;\n            rows[i].qty += 1;\n            netDebitCreditState[0] -= data[0].puts_ask * -1;\n            // i = undefined;\n            data_price = undefined;\n            change_counter = 1;\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n          if (data[1] == \"puts_bid\") {\n            rows[i].price += data[0].puts_bid;\n            rows[i].qty -= 1;\n            netDebitCreditState[0] += data[0].puts_bid * -1;\n            // i = undefined;\n            data_price = undefined;\n            change_counter = 1;\n            if (rows[i].qty > 0) {\n              rows[i].opt_side = \"BUY\";\n            }\n            if (rows[i].qty < 0) {\n              rows[i].opt_side = \"SELL\";\n            }\n            if (rows[i].qty === 0) {\n              spliceCtr = i;\n            }\n          }\n        }\n\n        if (rows[i].qty === 0) {\n          rows.splice(i, 1)\n        }\n\n        // if (spliceCtr !== 0) {\n        //   rows.splice(i, 1);\n        //   spliceCtr = 0;\n        // }\n\n\n      }\n\n      if (change_counter === 0) {\n        const ticker = \"BANKNIFTY\";\n        let opt_type = \"\";\n        let opt_side = \"\";\n        const strike = data[0].strike;\n        const expiry = data[0].expiry;\n        let price = 0;\n        let qty = 0;\n        if (data[1] === \"call_ask\") {\n          opt_type = \"CE\";\n          opt_side = \"BUY\";\n          price -= data[0].call_ask;\n          qty += 1;\n        }\n        if (data[1] === \"call_bid\") {\n          opt_type = \"CE\";\n          opt_side = \"SELL\";\n          price += data[0].call_bid;\n          qty -= 1;\n        }\n        if (data[1] === \"puts_ask\") {\n          opt_type = \"PE\";\n          opt_side = \"BUY\";\n          price -= data[0].puts_ask;\n          qty += 1;\n        }\n        if (data[1] === \"puts_bid\") {\n          opt_type = \"PE\";\n          opt_side = \"SELL\";\n          price += data[0].puts_bid;\n          qty -= 1;\n        }\n        rows.push({\n          ticker,\n          opt_type,\n          opt_side,\n          strike,\n          expiry,\n          price,\n          qty\n        });\n        netDebitCreditState[0] += price * -1;\n        change_counter = 1;\n      }\n\n      ctr++;\n    });\n    if (netDebitCreditState >= 0) {\n      toggleCSSState = \"lmao2\";\n    }\n  }\n\n  // Send Request to the python server for risk profile values\n  const sendRiskProfileValues = () => {\n    const socket = new WebSocket(\"ws://34.67.192.105:9090\");\n    let graphData;\n\n    socket.addEventListener(\"open\", event => {\n      const final_graph_data_array = [];\n      for (let i = 1; i < rows.length; i++) {\n        const underlying = rows[i].ticker.toLowerCase();\n        const quantity = rows[i].qty;\n        const opt_type = rows[i].opt_type.slice(0, 1);\n        const strike = rows[i].strike;\n        const price = rows[i].price;\n        let expiry1 = moment(rows[i].expiry, \"DD/MM/YYYY\").format(\"D MMMM Y\");\n        expiry1 = expiry1.toLowerCase();\n        const expiry =\n          expiry1.slice(0, 2) + expiry1.slice(3, 6) + expiry1.slice(12, 16);\n        final_graph_data_array.push({\n          underlying: underlying,\n          expiry: expiry,\n          quantity: quantity,\n          opt_type: opt_type,\n          strike: strike,\n          price: price\n        });\n      }\n      const toSend = {\n        no_legs: rows.length - 1,\n        Legs: JSON.parse(JSON.stringify(final_graph_data_array)),\n        net_credit_debit: netDebitCreditState[0]\n      };\n      console.log(\"TOOOO SEND\", toSend);\n      // const check = JSON.stringify(final_graph_data_array)\n      // const finalCheck = check.slice(1, check.length - 1)\n      // console.log(JSON.parse(check))\n      socket.send(JSON.stringify(toSend));\n    });\n\n    // Listen for messages\n    socket.addEventListener(\"message\", event => {\n      // console.log(\"Message from server \", event.data);\n      graphData = JSON.parse(event.data);\n      // console.log(graphData)\n      // Dispatch action with grah data\n      dispatch(getGraphData(graphData));\n    });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container} id=\"positions_tasks_tables\">\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody className=\"positions_tasks_table\">\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => {\n                return (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.code}\n                    className=\"lmao\"\n                    id={toggleCSSState}\n                  >\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <span>\n        <h6 className=\"net_Debit_credit_heading\">\n          Net Debit/Credit: {netDebitCreditState[0]}\n        </h6>\n      </span>\n      <button className=\"get_graph_button\" onClick={sendRiskProfileValues}>\n        Risk Profile Graph\n      </button>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}