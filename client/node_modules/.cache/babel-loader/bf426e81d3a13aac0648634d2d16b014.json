{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\"; // Import Highcharts\n\nimport Highcharts from \"highcharts/highcharts.src.js\"; // Import Action creator and dispatch\n\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.afterChartCreated = chart => {\n      this.internalChart = chart;\n      this.forceUpdate();\n    };\n\n    const x = [];\n    const y = [];\n    this.state = {\n      currentData: [],\n      expiryData: [],\n      pricesData: [],\n      chartOptions: {\n        series: [{\n          name: \"Now\",\n          data: x\n        }, {\n          name: \"Expiry\",\n          color: \"green\",\n          data: y\n        }],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n          categories: []\n        }\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow(); // console.log(this.props.graphValues);\n\n    this.setState({\n      currentData: this.props.graphValues.graphValues.current_payoff,\n      expiryData: this.props.graphValues.graphValues.expiry_payoff,\n      pricesData: this.props.graphValues.graphValues.underlying_price // chartOptions.series[1].data:\n\n    }); // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n\n    if (typeof this.state.currentData !== \"undefined\" && this.state.currentData.length > 0) {\n      this.state.currentData.map(data => {\n        this.state.chartOptions.series[0].data.push(data);\n      }); // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    } // Updating Expiry Data Frame\n\n\n    if (typeof this.state.expiryData !== \"undefined\" && this.state.expiryData.length > 0) {\n      this.state.expiryData.map(data => {\n        this.state.chartOptions.series[1].data.push(data);\n      }); // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    } // Updating Prices Data Frame\n\n\n    if (typeof this.state.pricesData !== \"undefined\" && this.state.pricesData.length > 0) {\n      this.state.pricesData.map(data => {\n        this.state.chartOptions.xAxis.categories.push(data);\n      }); // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n\n    console.log(this.state.chartOptions.series);\n  }\n\n  componentDidMount() {// this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart,\n          customLabels = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartOptions,\n      callback: this.afterChartCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), customLabels);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(mapStateToProps, {\n  getGraphData\n})(withRouter(RiskProfile));","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/graphs/RiskProfile.js"],"names":["React","render","HighchartsReact","Highcharts","getGraphData","connect","withRouter","RiskProfile","PureComponent","constructor","props","afterChartCreated","chart","internalChart","forceUpdate","x","y","state","currentData","expiryData","pricesData","chartOptions","series","name","data","color","backgroundColor","type","credits","enabled","title","text","align","fontFamily","style","yAxis","fontWeight","labels","xAxis","categories","componentDidUpdate","reflow","setState","graphValues","current_payoff","expiry_payoff","underlying_price","length","map","push","console","log","componentDidMount","customLabels","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport HighchartsReact from \"highcharts-react-official\";\n// Import Highcharts\nimport Highcharts from \"highcharts/highcharts.src.js\";\n// Import Action creator and dispatch\nimport { getGraphData } from \"../../actions/graphsAction\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RiskProfile extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    const x = []\n    const y = []\n    this.state = {\n      currentData: [],\n      expiryData: [],\n      pricesData: [],\n      chartOptions: {\n        series: [\n          {\n            name: \"Now\",\n            data: x\n          },\n          {\n            name: \"Expiry\",\n            color: \"green\",\n            data: y\n          }\n        ],\n        chart: {\n          backgroundColor: \"#1f2531\",\n          type: \"line\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"Risk Profile Graph\",\n          align: \"center\",\n          fontFamily: \"Lucida Grande\",\n          x: 70,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        yAxis: {\n          title: {\n            enabled: true,\n            text: \"Prices\",\n            style: {\n              fontWeight: \"normal\",\n              color: \"#fff\"\n            }\n          },\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          }\n        },\n        xAxis: {\n          labels: {\n            style: {\n              color: \"#fff\"\n            }\n          },\n\n          categories: []\n        }\n      }\n    };\n  }\n\n  afterChartCreated = chart => {\n    this.internalChart = chart;\n    this.forceUpdate();\n  };\n\n  componentDidUpdate() {\n    //this.internalChart.getMargins(); // redraw\n    this.internalChart.reflow();\n    // console.log(this.props.graphValues);\n    this.setState({\n      currentData: this.props.graphValues.graphValues.current_payoff,\n      expiryData: this.props.graphValues.graphValues.expiry_payoff,\n      pricesData: this.props.graphValues.graphValues.underlying_price\n      // chartOptions.series[1].data:\n    });\n\n    // console.log(this.state.graphData);\n    // console.log(this.props.graphValues.graphValues);\n    // Updating Now Data Frame\n    if (\n      typeof this.state.currentData !== \"undefined\" &&\n      this.state.currentData.length > 0\n    ) {\n      this.state.currentData.map(data => {\n        this.state.chartOptions.series[0].data.push(data);\n      });\n      // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n    // Updating Expiry Data Frame\n    if (\n      typeof this.state.expiryData !== \"undefined\" &&\n      this.state.expiryData.length > 0\n    ) {\n      this.state.expiryData.map(data => {\n        this.state.chartOptions.series[1].data.push(data);\n      });\n      // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n    // Updating Prices Data Frame\n    if (\n      typeof this.state.pricesData !== \"undefined\" &&\n      this.state.pricesData.length > 0\n    ) {\n      this.state.pricesData.map(data => {\n        this.state.chartOptions.xAxis.categories.push(data);\n      });\n      // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n    }\n    console.log(this.state.chartOptions.series);\n  }\n  componentDidMount() {\n    // this.state.chartOptions.series[1].data.push(this.props.graphValues.graphValues.expiry_payoff);\n  }\n\n  render() {\n    const chart = this.internalChart,\n      customLabels = [];\n\n    return (\n      <div>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state.chartOptions}\n          callback={this.afterChartCreated}\n        />\n        {customLabels}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  graphValues: state.graphValues\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGraphData }\n)(withRouter(RiskProfile));\n"]},"metadata":{},"sourceType":"module"}