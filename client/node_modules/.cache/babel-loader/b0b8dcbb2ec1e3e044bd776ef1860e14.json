{"ast":null,"code":"import _slicedToArray from \"/Users/neeraj/Desktop/standard_alpha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Table.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"ticker\",\n  label: \"Ticker\",\n  minWidth: 170\n}, {\n  id: \"opt_type\",\n  label: \"Option Type\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"strike\",\n  label: \"Strike\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"expiry\",\n  label: \"Expiry\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"price\",\n  label: \"Price\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"qty\",\n  label: \"Quantity\",\n  minWidth: 100,\n  align: \"center\",\n  format: value => value.toLocaleString()\n}\n/*{{\n  id: \"density\",\n  label: \"Density\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}}*/\n];\n\nfunction createData(ticker, opt_type, strike, expiry, price, qty) {\n  return {\n    ticker,\n    opt_type,\n    strike,\n    expiry,\n    price,\n    qty\n  };\n}\n\nconst rows = [createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2), createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2), createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2), createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2), createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2)];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    className: \"positions_tasks_table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/neeraj/Desktop/standard_alpha/client/src/components/tables/Table.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","ticker","opt_type","strike","expiry","price","qty","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  {\n    id: \"ticker\",\n    label: \"Ticker\",\n    minWidth: 170\n  },\n  {\n    id: \"opt_type\",\n    label: \"Option Type\",\n    minWidth: 100,\n    align: \"center\"\n  },\n  {\n    id: \"strike\",\n    label: \"Strike\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"expiry\",\n    label: \"Expiry\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"price\",\n    label: \"Price\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"qty\",\n    label: \"Quantity\",\n    minWidth: 100,\n    align: \"center\",\n    format: value => value.toLocaleString()\n  }\n  /*{{\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }}*/\n];\n\nfunction createData(ticker, opt_type, strike, expiry, price, qty) {\n  return { ticker, opt_type, strike, expiry, price, qty };\n}\n\nconst rows = [\n  createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2),\n  createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2),\n  createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2),\n  createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2),\n  createData(\"BANKIFTY\", \"PE\", 102, \"10/06/19\", 4, -2)\n\n\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container} >\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody className=\"positions_tasks_table\" >\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}